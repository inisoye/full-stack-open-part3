{"version":3,"sources":["components/Filter.js","components/Notification.js","components/PersonForm.js","components/Persons.js","services/persons.js","App.js","index.js"],"names":["Filter","handleSearch","type","onChange","Notification","message","className","PersonForm","addPerson","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","value","Persons","id","name","number","deletePerson","data-id","data-name","onClick","baseUrl","axios","get","then","response","data","newObject","post","delete","put","App","useState","persons","setPersons","setNewName","setNewNumber","searchValue","setSearchValue","notificationMessage","setNotificationMessage","notificationType","setNotificationType","useEffect","personsHttpServices","returnedPersons","trimString","inputString","trim","toLowerCase","replace","nameAlreadyExists","some","eachPerson","event","target","getAttribute","window","confirm","filter","catch","error","setTimeout","searchedPersons","trimmedName","trimmedInput","includes","preventDefault","numberReplacementConfirmed","existentPerson","find","changedPerson","returnedPerson","map","console","log","createdPerson","concat","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.16084418.chunk.js","sourcesContent":["import React from 'react';\n\nconst Filter = ({ handleSearch }) => {\n  return (\n    <>\n      filter shown with <input type='search' onChange={handleSearch} />\n    </>\n  );\n};\n\nexport default Filter;\n","import React from 'react';\n\nconst Notification = ({ message, type }) => {\n  if (message === null) {\n    return null;\n  }\n\n  return <div className={`notification ${type}`}>{message}</div>;\n};\n\nexport default Notification;\n","import React from 'react';\n\nconst PersonForm = ({\n  addPerson,\n  newName,\n  handleNameChange,\n  newNumber,\n  handleNumberChange,\n}) => {\n  return (\n    <form onSubmit={addPerson}>\n      <div>\n        name: <input value={newName} onChange={handleNameChange} />\n      </div>\n      <div>\n        number: <input value={newNumber} onChange={handleNumberChange} />\n      </div>\n      <div>\n        <button type='submit'>add</button>\n      </div>\n    </form>\n  );\n};\n\nexport default PersonForm;\n","import React from 'react';\n\nconst Persons = ({ id, name, number, deletePerson }) => {\n  return (\n    <div>\n      <span>{name} </span>\n      <span>{number} </span>\n      <button data-id={id} data-name={name} onClick={deletePerson}>\n        delete\n      </button>\n    </div>\n  );\n};\n\nexport default Persons;\n","import axios from 'axios';\nconst baseUrl = '/api/persons';\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then((response) => response.data);\n};\n\nconst add = (newObject) => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then((response) => response.data);\n};\n\nconst del = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`);\n  return request.then((response) => response);\n};\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then((response) => response.data);\n};\n\nexport default {\n  getAll,\n  add,\n  del,\n  update,\n};\n","import React, { useState, useEffect } from 'react';\n\nimport Filter from './components/Filter';\nimport Notification from './components/Notification';\nimport PersonForm from './components/PersonForm';\nimport Persons from './components/Persons';\n\nimport personsHttpServices from './services/persons';\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [searchValue, setSearchValue] = useState('');\n  const [notificationMessage, setNotificationMessage] = useState(null);\n  const [notificationType, setNotificationType] = useState('confirmation');\n\n  useEffect(() => {\n    personsHttpServices\n      .getAll()\n      .then((returnedPersons) => setPersons(returnedPersons));\n  }, []);\n\n  const handleNameChange = (event) => setNewName(event.target.value);\n  const handleNumberChange = (event) => setNewNumber(event.target.value);\n  const handleSearch = (event) => setSearchValue(event.target.value);\n\n  /* Default value (empty string) set for inputString. \n    Prevents errors that fire before data loads */\n  const trimString = (inputString = '') =>\n    inputString.trim().toLowerCase().replace(/\\s+/g, '');\n\n  const nameAlreadyExists = persons.some(\n    (eachPerson) => trimString(eachPerson.name) === trimString(newName)\n  );\n\n  const addPerson = (event) => {\n    event.preventDefault();\n\n    if (nameAlreadyExists) {\n      const numberReplacementConfirmed = window.confirm(\n        `${newName} is already added to phonebook, replace old number with a new one?`\n      );\n      const existentPerson = persons.find(\n        (eachPerson) => trimString(eachPerson.name) === trimString(newName)\n      );\n      const id = existentPerson.id;\n      const changedPerson = { ...existentPerson, number: newNumber };\n\n      if (numberReplacementConfirmed) {\n        personsHttpServices\n          .update(id, changedPerson)\n          .then((returnedPerson) => {\n            setPersons(\n              persons.map((eachPerson) =>\n                trimString(eachPerson.name) !== trimString(newName)\n                  ? eachPerson\n                  : returnedPerson\n              )\n            );\n            // Display message for a limited time\n            setNotificationMessage(\n              `${newName}'s number has now been replaced.`\n            );\n            setNotificationType('confirmation');\n          })\n          .catch((error) => {\n            console.log(error.response.data);\n            setNotificationMessage(\n              `There was an error in updating ${newName}'s number`\n            );\n            setNotificationType('error');\n          });\n      }\n\n      setTimeout(() => {\n        setNotificationMessage(null);\n      }, 5000);\n\n      setNewName('');\n      setNewNumber('');\n    } else {\n      const newPersonObject = {\n        name: newName,\n        number: newNumber,\n      };\n\n      personsHttpServices\n        .add(newPersonObject)\n        .then((createdPerson) => {\n          // Display message for a limited time\n          setNotificationMessage(`Added ${newName}`);\n          setNotificationType('confirmation');\n\n          setPersons(persons.concat(createdPerson));\n        })\n        .catch((error) => {\n          // access error message sent from the server\n          console.log(error.response.data);\n          setNotificationMessage(error.response.data.error);\n          setNotificationType('error');\n        });\n\n      setTimeout(() => {\n        setNotificationMessage(null);\n      }, 5000);\n\n      setNewName('');\n      setNewNumber('');\n    }\n  };\n\n  const deletePerson = (event) => {\n    const name = event.target.getAttribute('data-name');\n    const id = event.target.getAttribute('data-id');\n\n    const deletionConfirmed = window.confirm(`Delete ${name}?`);\n\n    if (deletionConfirmed) {\n      personsHttpServices\n        .del(id)\n        .then(() => {\n          setPersons(persons.filter((eachPerson) => eachPerson.id !== id));\n        })\n        .catch((error) => {\n          /* This one size fits all message isn't always right. \n          It still displays, for example, if the server is offline.*/\n          setNotificationMessage(\n            `It appears that this person's info has already been removed from server. Refresh the page to confirm.`\n          );\n          setNotificationType('error');\n        });\n    }\n\n    setTimeout(() => {\n      setNotificationMessage(null);\n    }, 3000);\n  };\n\n  const searchedPersons = persons.filter((eachPerson) => {\n    const trimmedName = trimString(eachPerson.name);\n    const trimmedInput = trimString(searchValue);\n    return trimmedName.includes(trimmedInput);\n  });\n\n  return (\n    <div>\n      <div>\n        <h2>Phonebook</h2>\n        <Notification type={notificationType} message={notificationMessage} />\n        <Filter handleSearch={handleSearch} />\n      </div>\n\n      <div>\n        <h3>add a new</h3>\n        <PersonForm\n          addPerson={addPerson}\n          newName={newName}\n          handleNameChange={handleNameChange}\n          newNumber={newNumber}\n          handleNumberChange={handleNumberChange}\n        />\n      </div>\n\n      <div>\n        <h3>Numbers</h3>\n        {searchedPersons.map((eachPerson) => (\n          <Persons\n            name={eachPerson.name}\n            number={eachPerson.number}\n            key={eachPerson.id}\n            id={eachPerson.id}\n            deletePerson={deletePerson}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css'\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}